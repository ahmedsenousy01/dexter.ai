# Dexter.AI Docker Compose Configuration
# This file defines all services needed for the application

services:
  # Web frontend
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./web/.env
    volumes:
      - sqlite-data:/app/data
    depends_on:
      langgraph-api:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - dexter-network

  # LangGraph API service
  langgraph-api:
    image: "dexter-langgraph"
    ports:
      - "8123:8000"
    depends_on:
      langgraph-redis:
        condition: service_healthy
      langgraph-postgres:
        condition: service_healthy
    env_file:
      - ./agent/.env
    networks:
      - dexter-network
    restart: unless-stopped
    healthcheck:
      test: curl --fail http://localhost:8000/ok || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis for LangGraph
  langgraph-redis:
    image: redis:6
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 1s
      retries: 5
    networks:
      - dexter-network
    restart: unless-stopped

  # PostgreSQL for LangGraph
  langgraph-postgres:
    image: postgres:16
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    env_file:
      - ./agent/.env
    volumes:
      - langgraph-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres
      start_period: 10s
      timeout: 1s
      retries: 5
      interval: 5s
    networks:
      - dexter-network
    restart: unless-stopped

# Networks
networks:
  dexter-network:
    driver: bridge

# Volumes
volumes:
  sqlite-data:
  langgraph-data:
