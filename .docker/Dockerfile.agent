FROM python:3.13-slim AS builder

WORKDIR /app

# Copy uv from official image
COPY --from=ghcr.io/astral-sh/uv:latest /uv /bin/uv

# Set up cache directory
ENV UV_CACHE_DIR=/app/.cache/uv
RUN mkdir -p /app/.cache/uv && chmod -R 777 /app/.cache

# Create virtual environment
RUN uv venv /opt/venv
ENV VIRTUAL_ENV=/opt/venv
ENV PATH="/opt/venv/bin:$PATH"
ENV UV_SYSTEM_PYTHON=1

# Copy dependency files
COPY agent/pyproject.toml agent/uv.lock agent/README.md ./

# Install dependencies with caching
RUN --mount=type=cache,target=/app/.cache/uv \
    uv pip install \
    "PyPDF2>=3.0.0" \
    "langchain>=0.1.0" \
    "langchain-core>=0.1.0" \
    "langchain-community>=0.0.10" \
    "langchain-openai>=0.0.5" \
    "langchain-google-genai>=0.0.6" \
    "python-dotenv>=1.0.0" \
    "google-generativeai>=0.3.0" \
    "faiss-cpu>=1.7.4" \
    "langgraph>=0.0.15" \
    "typing-extensions>=4.8.0" \
    "openai>=1.12.0" \
    "langgraph-cli[inmem]>=0.1.58" && \
    uv sync --frozen --no-install-project

# Copy the agent code
COPY agent/src ./src

# Install project in editable mode
RUN --mount=type=cache,target=/app/.cache/uv \
    uv pip install -e .

# Final stage
FROM python:3.13-slim

WORKDIR /app

# Copy uv from official image
COPY --from=ghcr.io/astral-sh/uv:latest /uv /bin/uv

# Set up cache directory
ENV UV_CACHE_DIR=/app/.cache/uv
RUN mkdir -p /app/.cache/uv && chmod -R 777 /app/.cache

# Set environment variables
ENV VIRTUAL_ENV=/opt/venv
ENV PATH="/opt/venv/bin:$PATH"
ENV PYTHONPATH="/app/src"
ENV UV_SYSTEM_PYTHON=1

# Create necessary directories
RUN mkdir -p /app/data/output /app/input /app/faiss_index /app/src && \
    chown -R 1000:1000 /app && \
    chmod -R 755 /app

# Copy dependency files
COPY agent/pyproject.toml agent/uv.lock agent/README.md ./

# Copy the source code
COPY agent/src ./src

# Copy input files if they exist
COPY agent/input/. /app/input/

# Create virtual environment and install dependencies
RUN uv venv /opt/venv

RUN --mount=type=cache,target=/app/.cache/uv \
    uv pip install \
    "PyPDF2>=3.0.0" \
    "langchain>=0.1.0" \
    "langchain-core>=0.1.0" \
    "langchain-community>=0.0.10" \
    "langchain-openai>=0.0.5" \
    "langchain-google-genai>=0.0.6" \
    "python-dotenv>=1.0.0" \
    "google-generativeai>=0.3.0" \
    "faiss-cpu>=1.7.4" \
    "langgraph>=0.0.15" \
    "typing-extensions>=4.8.0" \
    "openai>=1.12.0" \
    "langgraph-cli[inmem]>=0.1.58" && \
    uv sync --frozen --no-install-project && \
    uv pip install -e .

# Switch to non-root user
USER 1000:1000

# Expose langgraph dev server port
EXPOSE 2024

# Set up volumes for persistent data
VOLUME ["/app/data", "/app/faiss_index", "/app/input"]

# Run the main.py script directly
CMD ["python", "-m", "main"] 
