name: Lint and Format

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-web:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: development
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install web dependencies
        working-directory: ./web
        run: pnpm install

      - name: Run format check for web
        working-directory: ./web
        run: pnpm format:check

      - name: Run lint check for web
        working-directory: ./web
        run: pnpm lint

  lint-agent:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create pip cache directory
        run: mkdir -p /home/runner/.cache/pip

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install and setup uv
        working-directory: ./agent
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          export PATH="/root/.cargo/bin:$PATH"
          uv sync --all-extras

      - name: Run ruff for Python linting
        working-directory: ./agent
        run: |
          uv pip install ruff
          uv run ruff check .
          uv run ruff format --check .
